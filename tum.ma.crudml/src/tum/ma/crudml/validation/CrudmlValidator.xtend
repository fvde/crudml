/*
 * generated by Xtext
 */
package tum.ma.crudml.validation

import org.eclipse.xtext.validation.Check
import tum.ma.crudml.crudml.Access
import tum.ma.crudml.crudml.CrudmlPackage

//import org.eclipse.xtext.validation.Check

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class CrudmlValidator extends AbstractCrudmlValidator {

	@Check
	def void checkUniqueOperations(Access a) {
		var operations = a.operations.split(" ").sort;
		for (var x = 0; x < operations.size - 1; x++) {
			if (operations.get(x).equals(operations.get(x + 1))) {
				error("Duplicate operation " + operations.get(x), CrudmlPackage.Literals::ACCESS__OPERATIONS);
				return;
			}
		}
	}
	
	/* 
	@Check
	def void checkNameStartsWithCapital(Entity entity) {
		if (!Character::isUpperCase(entity.getName().charAt(0))) {
			warning("Name should start with a capital", DomainmodelPackage$Literals::ENTITY);
		}
	}
	* 
	* */
	
	/*
	 * TODO's
	 * 'all' sollte alle anderen rechte unnötig machen
	 * Groß und kleinschreibung einheitlich (Rechte, Rollen)
	 * 
	 */
}
