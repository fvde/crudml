/*
 * generated by Xtext
 */
package tum.ma.crudml.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import tum.ma.crudml.crudml.Entity
import tum.ma.crudml.scout.ScoutProjectGenerator
import org.eclipse.xtext.generator.IFileSystemAccessExtension
import org.eclipse.xtext.generator.OutputConfigurationProvider

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class CrudmlGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		
		var efsa = new ExtendedFileSystemAccess(fsa);
		
		// Start by generating the template project	
		createProjectTemplate(efsa)
	
		// Debug information		
		fsa.generateFile('debug.txt', 'Stuff to greet: ' + 
			resource.allContents
				.filter(typeof(Entity))
				.map[name]
				.join(', ')
				+
				'\n /// Debug: /// \n' 
				+ resource.URI
				+ System.getProperty("user.dir"))

		//efsa.deleteFile('debug.txt');
	}
	
	def createProjectTemplate(ExtendedFileSystemAccess fsa){
		ScoutProjectGenerator.generateScoutTemplateProject("Application", "app", "app", "fvde", fsa);	
	} 
}
